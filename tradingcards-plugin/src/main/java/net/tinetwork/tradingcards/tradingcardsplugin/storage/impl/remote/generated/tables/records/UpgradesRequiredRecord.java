/*
 * This file is generated by jOOQ.
 */
package net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.records;


import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.UpgradesRequired;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UpgradesRequiredRecord extends UpdatableRecordImpl<UpgradesRequiredRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>{prefix}upgrades_required.upgrade_id</code>.
     */
    public void setUpgradeId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>{prefix}upgrades_required.upgrade_id</code>.
     */
    public String getUpgradeId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>{prefix}upgrades_required.series_id</code>.
     */
    public void setSeriesId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>{prefix}upgrades_required.series_id</code>.
     */
    public String getSeriesId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>{prefix}upgrades_required.amount</code>.
     */
    public void setAmount(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>{prefix}upgrades_required.amount</code>.
     */
    public String getAmount() {
        return (String) get(2);
    }

    /**
     * Setter for <code>{prefix}upgrades_required.rarity_id</code>.
     */
    public void setRarityId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>{prefix}upgrades_required.rarity_id</code>.
     */
    public String getRarityId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UpgradesRequired.UPGRADES_REQUIRED.UPGRADE_ID;
    }

    @Override
    public Field<String> field2() {
        return UpgradesRequired.UPGRADES_REQUIRED.SERIES_ID;
    }

    @Override
    public Field<String> field3() {
        return UpgradesRequired.UPGRADES_REQUIRED.AMOUNT;
    }

    @Override
    public Field<String> field4() {
        return UpgradesRequired.UPGRADES_REQUIRED.RARITY_ID;
    }

    @Override
    public String component1() {
        return getUpgradeId();
    }

    @Override
    public String component2() {
        return getSeriesId();
    }

    @Override
    public String component3() {
        return getAmount();
    }

    @Override
    public String component4() {
        return getRarityId();
    }

    @Override
    public String value1() {
        return getUpgradeId();
    }

    @Override
    public String value2() {
        return getSeriesId();
    }

    @Override
    public String value3() {
        return getAmount();
    }

    @Override
    public String value4() {
        return getRarityId();
    }

    @Override
    public UpgradesRequiredRecord value1(String value) {
        setUpgradeId(value);
        return this;
    }

    @Override
    public UpgradesRequiredRecord value2(String value) {
        setSeriesId(value);
        return this;
    }

    @Override
    public UpgradesRequiredRecord value3(String value) {
        setAmount(value);
        return this;
    }

    @Override
    public UpgradesRequiredRecord value4(String value) {
        setRarityId(value);
        return this;
    }

    @Override
    public UpgradesRequiredRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UpgradesRequiredRecord
     */
    public UpgradesRequiredRecord() {
        super(UpgradesRequired.UPGRADES_REQUIRED);
    }

    /**
     * Create a detached, initialised UpgradesRequiredRecord
     */
    public UpgradesRequiredRecord(String upgradeId, String seriesId, String amount, String rarityId) {
        super(UpgradesRequired.UPGRADES_REQUIRED);

        setUpgradeId(upgradeId);
        setSeriesId(seriesId);
        setAmount(amount);
        setRarityId(rarityId);
    }
}
