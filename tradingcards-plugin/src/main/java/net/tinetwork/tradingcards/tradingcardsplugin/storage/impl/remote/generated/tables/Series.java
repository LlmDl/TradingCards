/*
 * This file is generated by jOOQ.
 */
package net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables;


import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.Keys;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.Minecraft;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.enums.SeriesSeriesMode;
import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.records.SeriesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Series extends TableImpl<SeriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>minecraft.series</code>
     */
    public static final Series SERIES = new Series();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeriesRecord> getRecordType() {
        return SeriesRecord.class;
    }

    /**
     * The column <code>minecraft.series.series_id</code>.
     */
    public final TableField<SeriesRecord, String> SERIES_ID = createField(DSL.name("series_id"), SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>minecraft.series.display_name</code>.
     */
    public final TableField<SeriesRecord, String> DISPLAY_NAME = createField(DSL.name("display_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>minecraft.series.series_mode</code>.
     */
    public final TableField<SeriesRecord, SeriesSeriesMode> SERIES_MODE = createField(DSL.name("series_mode"), SQLDataType.VARCHAR(9).asEnumDataType(net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.enums.SeriesSeriesMode.class), this, "");

    private Series(Name alias, Table<SeriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Series(Name alias, Table<SeriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>minecraft.series</code> table reference
     */
    public Series(String alias) {
        this(DSL.name(alias), SERIES);
    }

    /**
     * Create an aliased <code>minecraft.series</code> table reference
     */
    public Series(Name alias) {
        this(alias, SERIES);
    }

    /**
     * Create a <code>minecraft.series</code> table reference
     */
    public Series() {
        this(DSL.name("series"), null);
    }

    public <O extends Record> Series(Table<O> child, ForeignKey<O, SeriesRecord> key) {
        super(child, key, SERIES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Minecraft.MINECRAFT;
    }

    @Override
    public UniqueKey<SeriesRecord> getPrimaryKey() {
        return Keys.KEY_SERIES_PRIMARY;
    }

    @Override
    public Series as(String alias) {
        return new Series(DSL.name(alias), this);
    }

    @Override
    public Series as(Name alias) {
        return new Series(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Series rename(String name) {
        return new Series(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Series rename(Name name) {
        return new Series(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, SeriesSeriesMode> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
