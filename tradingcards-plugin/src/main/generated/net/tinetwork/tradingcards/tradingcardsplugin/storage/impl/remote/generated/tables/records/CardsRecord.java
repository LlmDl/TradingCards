/*
 * This file is generated by jOOQ.
 */
package net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.records;


import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Cards;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> implements Record12<Integer, String, String, String, Boolean, String, String, Integer, Double, Double, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>{prefix}cards.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>{prefix}cards.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>{prefix}cards.card_id</code>.
     */
    public void setCardId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>{prefix}cards.card_id</code>.
     */
    public String getCardId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>{prefix}cards.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>{prefix}cards.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>{prefix}cards.rarity_id</code>.
     */
    public void setRarityId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>{prefix}cards.rarity_id</code>.
     */
    public String getRarityId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>{prefix}cards.has_shiny</code>.
     */
    public void setHasShiny(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>{prefix}cards.has_shiny</code>.
     */
    public Boolean getHasShiny() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>{prefix}cards.series_id</code>.
     */
    public void setSeriesId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>{prefix}cards.series_id</code>.
     */
    public String getSeriesId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>{prefix}cards.info</code>.
     */
    public void setInfo(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>{prefix}cards.info</code>.
     */
    public String getInfo() {
        return (String) get(6);
    }

    /**
     * Setter for <code>{prefix}cards.custom_model_data</code>.
     */
    public void setCustomModelData(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>{prefix}cards.custom_model_data</code>.
     */
    public Integer getCustomModelData() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>{prefix}cards.buy_price</code>.
     */
    public void setBuyPrice(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>{prefix}cards.buy_price</code>.
     */
    public Double getBuyPrice() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>{prefix}cards.sell_price</code>.
     */
    public void setSellPrice(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>{prefix}cards.sell_price</code>.
     */
    public Double getSellPrice() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>{prefix}cards.type_id</code>.
     */
    public void setTypeId(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>{prefix}cards.type_id</code>.
     */
    public String getTypeId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>{prefix}cards.currency_id</code>.
     */
    public void setCurrencyId(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>{prefix}cards.currency_id</code>.
     */
    public String getCurrencyId() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, String, Boolean, String, String, Integer, Double, Double, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, String, String, Boolean, String, String, Integer, Double, Double, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Cards.CARDS.ID;
    }

    @Override
    public Field<String> field2() {
        return Cards.CARDS.CARD_ID;
    }

    @Override
    public Field<String> field3() {
        return Cards.CARDS.DISPLAY_NAME;
    }

    @Override
    public Field<String> field4() {
        return Cards.CARDS.RARITY_ID;
    }

    @Override
    public Field<Boolean> field5() {
        return Cards.CARDS.HAS_SHINY;
    }

    @Override
    public Field<String> field6() {
        return Cards.CARDS.SERIES_ID;
    }

    @Override
    public Field<String> field7() {
        return Cards.CARDS.INFO;
    }

    @Override
    public Field<Integer> field8() {
        return Cards.CARDS.CUSTOM_MODEL_DATA;
    }

    @Override
    public Field<Double> field9() {
        return Cards.CARDS.BUY_PRICE;
    }

    @Override
    public Field<Double> field10() {
        return Cards.CARDS.SELL_PRICE;
    }

    @Override
    public Field<String> field11() {
        return Cards.CARDS.TYPE_ID;
    }

    @Override
    public Field<String> field12() {
        return Cards.CARDS.CURRENCY_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCardId();
    }

    @Override
    public String component3() {
        return getDisplayName();
    }

    @Override
    public String component4() {
        return getRarityId();
    }

    @Override
    public Boolean component5() {
        return getHasShiny();
    }

    @Override
    public String component6() {
        return getSeriesId();
    }

    @Override
    public String component7() {
        return getInfo();
    }

    @Override
    public Integer component8() {
        return getCustomModelData();
    }

    @Override
    public Double component9() {
        return getBuyPrice();
    }

    @Override
    public Double component10() {
        return getSellPrice();
    }

    @Override
    public String component11() {
        return getTypeId();
    }

    @Override
    public String component12() {
        return getCurrencyId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCardId();
    }

    @Override
    public String value3() {
        return getDisplayName();
    }

    @Override
    public String value4() {
        return getRarityId();
    }

    @Override
    public Boolean value5() {
        return getHasShiny();
    }

    @Override
    public String value6() {
        return getSeriesId();
    }

    @Override
    public String value7() {
        return getInfo();
    }

    @Override
    public Integer value8() {
        return getCustomModelData();
    }

    @Override
    public Double value9() {
        return getBuyPrice();
    }

    @Override
    public Double value10() {
        return getSellPrice();
    }

    @Override
    public String value11() {
        return getTypeId();
    }

    @Override
    public String value12() {
        return getCurrencyId();
    }

    @Override
    public CardsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CardsRecord value2(String value) {
        setCardId(value);
        return this;
    }

    @Override
    public CardsRecord value3(String value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public CardsRecord value4(String value) {
        setRarityId(value);
        return this;
    }

    @Override
    public CardsRecord value5(Boolean value) {
        setHasShiny(value);
        return this;
    }

    @Override
    public CardsRecord value6(String value) {
        setSeriesId(value);
        return this;
    }

    @Override
    public CardsRecord value7(String value) {
        setInfo(value);
        return this;
    }

    @Override
    public CardsRecord value8(Integer value) {
        setCustomModelData(value);
        return this;
    }

    @Override
    public CardsRecord value9(Double value) {
        setBuyPrice(value);
        return this;
    }

    @Override
    public CardsRecord value10(Double value) {
        setSellPrice(value);
        return this;
    }

    @Override
    public CardsRecord value11(String value) {
        setTypeId(value);
        return this;
    }

    @Override
    public CardsRecord value12(String value) {
        setCurrencyId(value);
        return this;
    }

    @Override
    public CardsRecord values(Integer value1, String value2, String value3, String value4, Boolean value5, String value6, String value7, Integer value8, Double value9, Double value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(Integer id, String cardId, String displayName, String rarityId, Boolean hasShiny, String seriesId, String info, Integer customModelData, Double buyPrice, Double sellPrice, String typeId, String currencyId) {
        super(Cards.CARDS);

        setId(id);
        setCardId(cardId);
        setDisplayName(displayName);
        setRarityId(rarityId);
        setHasShiny(hasShiny);
        setSeriesId(seriesId);
        setInfo(info);
        setCustomModelData(customModelData);
        setBuyPrice(buyPrice);
        setSellPrice(sellPrice);
        setTypeId(typeId);
        setCurrencyId(currencyId);
        resetChangedOnNotNull();
    }
}
