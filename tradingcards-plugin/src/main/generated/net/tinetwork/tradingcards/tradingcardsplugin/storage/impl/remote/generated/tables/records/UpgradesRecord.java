/*
 * This file is generated by jOOQ.
 */
package net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.records;


import net.tinetwork.tradingcards.tradingcardsplugin.storage.impl.remote.generated.tables.Upgrades;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UpgradesRecord extends UpdatableRecordImpl<UpgradesRecord> implements Record1<String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>{prefix}upgrades.upgrade_id</code>.
     */
    public void setUpgradeId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>{prefix}upgrades.upgrade_id</code>.
     */
    public String getUpgradeId() {
        return (String) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<String> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<String> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Upgrades.UPGRADES.UPGRADE_ID;
    }

    @Override
    public String component1() {
        return getUpgradeId();
    }

    @Override
    public String value1() {
        return getUpgradeId();
    }

    @Override
    public UpgradesRecord value1(String value) {
        setUpgradeId(value);
        return this;
    }

    @Override
    public UpgradesRecord values(String value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UpgradesRecord
     */
    public UpgradesRecord() {
        super(Upgrades.UPGRADES);
    }

    /**
     * Create a detached, initialised UpgradesRecord
     */
    public UpgradesRecord(String upgradeId) {
        super(Upgrades.UPGRADES);

        setUpgradeId(upgradeId);
        resetChangedOnNotNull();
    }
}
